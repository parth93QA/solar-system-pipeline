name: Deployment - Resuable Workflow
on:
    workflow_call: 
jobs:
    reuse-deploy:
        environment: 
            name: development 
            url: ${{ steps.set-ingress-host-address.outputs.APP_INGRESS_HOST }}
        runs-on: ubuntu-latest
        outputs:
            APP_INGRESS_URL: ${{ steps.set-ingress-host-address.outputs.APP_INGRESS_HOST }}
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4
          
            - name: Install kubectl CLI
              uses: azure/setup-kubectl@v3
              with:
                version: 'v1.26.0'
        
            - name: Set KubeConfig
              uses: azure/k8s-set-context@v3
              with:
                method: kubeconfig
                kubeconfig: ${{ secrets.KUBECONFIG }}
            

            - name: Check Version
              run: |
                kubectl version --short 
                echo -----------------------------
                kubectl get nodes
        
            - name: Save Nginx Ingress Controller IP as a Github Env Variable
              run: |
                echo "INGRESS_IP=$(kubectl -n ingress-nginx get services ingress-nginx-controller -o jsonpath="{.status.loadBalancer.ingress[0].ip}")" >> $GITHUB_ENV


            - name: Replace Tokens in Manifest files
              uses: cschleiden/replace-tokens@v1
              with:
                tokenPrefix: '${'
                tokenSuffix: '}'
                files: '[kubernetes/development/*.yaml]'
              env:
                NAMESPACE: ${{ vars.NAMESPACE }}
                REPLICAS: ${{ vars.REPLICAS }}
                IMAGE: ${{ vars.DOCKER_USERNAME }}/solar-system:${{ github.sha }}
                INGRESS_IP: ${{ env.INGRESS_IP }}
        
            - name: Check Files
              run: |

                cat kubernetes/deploments/*.yaml

            - name: Create MongoDB Secret
              run: |
                kubectl -n ${{ vars.NAMESPACE }} create secret generic mongo-db-creds \
                --from-literal=MONGO_URI=${{ env.MONGO_URI }} \
                --from-literal=MONGO_USERNAME=${{ vars.MONGO_USERNAME }}\
                --from-literal=MONGO_PASSWORD=${{ secrets.MONGO_PASSWORD }} \
                --save-config \
                --dry-run=client \
                -o yaml | kubectl apply -f .
        
            - name: Deploy to Dev Env
              run: |
                kubectl apply -f kubernetes/development
        
            - name: Set Ingress Host URL
              id: set-ingress-host-address
              run: |
                echo "APP_INGRESS_HOST=$(kubectl -n ${{ vars.NAMESPACE }} get ingress -o jsonpath="{.items[0].spec.tls[0].hosts[0]}")"
          